function [locDATA] = showInstruction(part, task, screenInfo, params, locDATA)
% [locDATA] = function showInstruction(part, task, screenInfo, params, locDATA)
%   
% Shows instructions and examples for a random dot motion task.
%
% Instructions for buttonpress, coherence and reactions for task 1.
% Instructions for confidence rating, the Quadratic Scoring Rule and
% post-decision evidence for task 2.


curWindow = screenInfo.curWindow;
L_motion = (180/360) * (2*pi);
R_motion = (360/360) * (2*pi);

if part == 1
    if task == 1
        % present first instructions
        DrawFormattedText(curWindow, ['Welcome to this experiment. You will be asked to perform a motion judgment task. \n \n \n',...
            'For this first task you will perform 240  trials divided over 3 blocks. Please keep \n \n \n',...
            'your eyes fixated on the white fixation dot during the trials. Moving dots will appear around it. \n \n \n',...
            'Press any key when you are ready to an example of the moving dots.'],...
            'center', 'center', [255 255 255]);
        Screen('Flip', curWindow,0);
        WaitSecs(2);
        KbWait(-1);
        
        % show 100% leftward motion example
        showLocalizerDots_random(1, 1, 2000, L_motion, params, screenInfo);
        
        
        DrawFormattedText(curWindow, ['In this example, all dots moved to the left. \n \n \n',...
            'Now press any key again to see an example in which all dots move to the right.'],...
            'center', 'center', [255 255 255]);
        Screen('Flip', curWindow,0);
        WaitSecs(1);
        KbWait(-1);
        
        % show 100% rightward motion example
        showLocalizerDots_random(1, 1, 2000, R_motion, params, screenInfo);
        
        
        DrawFormattedText(curWindow, ['These examples were both pretty easy because all dots moved in one direction. \n \n \n',...
            'In the experiment, some of the dots will behave randomly, whereas others move to the right or left of the screen. \n \n \n',...
            'Your task is to guess the overall direction of the dots. \n \n \n',...
            'To see what this random motion looks like, press any key again.'],...
            'center', 'center', [255 255 255]);
        Screen('Flip', curWindow,0);
        WaitSecs(1);
        KbWait(-1);
        
        % show 20% leftward motion
        showLocalizerDots_random(1, 0.20, 2000, L_motion, params, screenInfo);
        
        DrawFormattedText(curWindow, ['During the experiment you will have less time to look at the dots. \n \n \n',...
            'Press any key to see what an actual trial will look like.'],...
            'center', 'center', [255 255 255]);
        Screen('Flip', curWindow,0);
        WaitSecs(1);
        KbWait(-1);
        
        % show 30% leftward motion
        showLocalizerDots_random(1, 0.30, 300, L_motion, params, screenInfo);
        WaitSecs(0.2);
        
        DrawFormattedText(curWindow, ['When the dots disappear it is time to respond. You can put your fingers on the 1 and 2 buttons. \n \n \n',...
            'If you think the dots moved to the left, press "1". If you think the dots moved to the right, press "2". \n \n \n',...
            'We will now show you the moving dots again. Look carefully, and decide whether they are \n \n \n',...
            'moving to the right or to the left. After the dots disappear, press 1 for left or 2 for right. \n \n \n',...
            'Make sure to not respond before the dots disappear \n \n \n. Press any key when you are ready to try out this example.'],...
            'center', 'center', [255 255 255]);
        Screen('Flip', curWindow,0);
        WaitSecs(2);
        KbWait(-1)
        
        % do an example exercise with 30% rightward motion
        showLocalizerDots_random(1, 0.3, 300, R_motion, params, screenInfo);
        [end_time, b_response, b_response_time] = collectButtonResponse(params, inf);
        
        % give chance to ask questions.
        DrawFormattedText(curWindow, ['The correct answer was 2, the dots were moving to the right. When you start the task, you will \n \n \n',...
            'hear a high tone if you choose the correct response and a low tone if you choose the wrong response. \n \n \n',...
            'If you have any questions before beginning the experiment, please ask the experimenter now. \n \n \n',...
            'If you are ready to start the experiment, press any key to begin.'],...
            'center', 'center', [255 255 255]);
        Screen('Flip', curWindow,0);
        WaitSecs(2);
        KbWait(-1)
        
    elseif task == 2 
        DrawFormattedText(curWindow, ['We will now explain the second task in this experiment. \n \n \n',...
            'The second task consists of  900  trials divided over 9 blocks. There will be 3 changes compared to the first task: \n \n \n',...
            'The first change is that you will no longer hear a tone after you have pressed 1 or 2. \n \n \n',...
            'Instead of hearing a tone, you will be asked to rate your confidence in your decision. \n \n \n',...
            'On each trial, you will be asked: how sure are you that your previous response was correct? \n \n \n',...
            'You can rate your confidence by left-clicking with the mouse on the confidence scale. \n \n \n',...
            'Press any key to see the confidence scale, and click on it to continue the instructions.'],...
            'center', 'center', [255 255 255]);
        Screen('Flip', curWindow,0);
        WaitSecs(2);
        KbWait(-1)
        
        [end_time, m_response, m_response_time] = showConfidenceScale(params, screenInfo);
        
        DrawFormattedText(curWindow, ['There are labels for each confidence level. \n \n \n',...
            'These labels are: certainly wrong, probably wrong, maybe wrong, maybe correct, \n \n \n',...
            'probably correct, certainly correct. They correspond to how certain you might be about a choice. \n \n \n',...
            'The numbers above the line represent a percentage confidence in being correct. \n \n \n', ...
            'You can click anywhere on the confidence line. \n \n \n',...
            'Press any key to see the confidence scale and practice clicking on it.'],...
            'center', 'center', [255 255 255]);
        Screen('Flip', curWindow,0);
        WaitSecs(2);
        KbWait(-1);
        
        [end_time, m_response, m_response_time] = showConfidenceScale(params, screenInfo);
        
        DrawFormattedText(curWindow, ['During this task you can earn extra money! \n \n \n', ...
            'You can win points by matching your confidence to your performance. \n \n \n',...
            'Specifically, the number of points you earn is based on a rule that \n \n \n',...
            'calculates how closely your confidence tracks your performance: \n \n \n',...
            'points = 100 * (1- (accuracy - confidence)^2) \n \n \n',...
            'This formula may appear complicated, but what it means for you is very simple: \n \n \n',...
            'You will get paid the most if you honestly report your best guess about the likelihood of being correct \n \n \n',...
            'for each decision. You can earn between 0 and 100 points for each trial. \n \n \n',...
            'We will now ask you some questions about how you earn money in this experiment. \n \n \n',...
            'Press any key when you are ready to answer these questions.'],...
            'center', 'center', [255 255 255]);
        Screen('Flip', curWindow,0);
        WaitSecs(2);
        KbWait(-1);
        
        
        [end_time, m_response, m_response_time] = testConfidenceScale(1, params, screenInfo);
        % save m_response to check whether they understand the QSR
        locDATA.qsr_test(1) = m_response;
        
        Screen('Flip', curWindow,0);
        WaitSecs(0.5);
        
        [end_time, m_response, m_response_time] = testConfidenceScale(2, params, screenInfo);
        % save m_response to check whether they understand the QSR
        locDATA.qsr_test(2) = m_response;
        
        Screen('Flip', curWindow,0);
        WaitSecs(0.5);
        
    % explaining test answers
    DrawFormattedText(curWindow, ['The correct answers were:  \n \n \n',... 
    'If you are sure you responded correctly, you should select 100% confidence/certainly correct. \n \n \n',... 
    'If you are sure you picked the wrong direction, you should select 0% confidence/certainly wrong. \n \n \n',...
    'If you are not 100% sure about being correct or incorrect you should select a location in between \n \n \n',...
    'according to the following descriptions on the confidence scale: \n \n \n',... 
    'probably incorrect = 20% confidence \n \n \n',...
    'maybe incorrect = 40% confidence \n \n \n',...
    'maybe correct = 60% confidence \n \n \n',...
    'probably correct = 80% confidence \n \n \n',...
    'You can also click anywhere in between these percentages. \n \n \n',...
    'Please press any key to continue the instructions.'],...
    'center', 'center', [255 255 255]);
    Screen('Flip', curWindow,0);
    WaitSecs(3);
    KbWait(-1) 
        
    
    % bonus evidence instructions
    DrawFormattedText(curWindow, ['You will also get to see bonus evidence (extra moving dots) after each decision! \n \n',...
        'This can help you know whether you were right or wrong. \n \n \n',...
        'Bonus evidence will be signalled by the fixation dot turning red. \n \n \n',...
        'You can use bonus evidence to help you make your confidence judgment. \n \n \n',...
        'Bonus evidence will be shown after every decision you make, and is always in the same direction as the regular evidence \n \n \n',...
        'Press any key to view an example of what this bonus evidence might look like. \n \n \n',...
        'Make sure to still press 1 or 2 to to signal your initial motion judgment.'],...
        'center', 'center', [255 255 255]);
    Screen('Flip', curWindow,0);
    WaitSecs(2);
    KbWait(-1)
    
    showLocalizerDots_random(1, 0.20, params.dur(1), L_motion, params, screenInfo);
    [end_time, b_response, b_response_time] = collectButtonResponse(params, inf);
    showLocalizerDots_random(2, 0.35, params.dur(1), L_motion, params, screenInfo);
    
    DrawFormattedText(curWindow, ['You will now look at another example of extra dot motion. \n \n \n',...
        'Remember to respond with 1 or 2 to the first (but not the bonus) patch of moving dots! \n \n \n',...
        'Press any key to continue'],...
        'center', 'center', [255 255 255]);
    Screen('Flip', curWindow,0);
    WaitSecs(0.5);
    KbWait(-1);
    
    showLocalizerDots_random(1, 0.35, params.dur(1), R_motion, params, screenInfo);
    [end_time, b_response, b_response_time] = collectButtonResponse(params, inf);
    showLocalizerDots_random(2, 0.20, params.dur(1), R_motion, params, screenInfo);
    
    DrawFormattedText(curWindow, ['You will now look at another example of extra dot motion. \n \n \n',...
        'Remember to respond with 1 or 2 to the first (but not the bonus) patch of moving dots! \n \n \n',...
        'Press any key to continue'],...
        'center', 'center', [255 255 255]);
    WaitSecs(0.5);
    KbWait(-1);
    
    showLocalizerDots_random(1, 0.25, params.dur(1), L_motion, params, screenInfo);
    [end_time, b_response, b_response_time] = collectButtonResponse(params, inf);
    showLocalizerDots_random(2, 0.25, params.dur(1), L_motion, params, screenInfo);
    
    DrawFormattedText(curWindow, ['After seeing the bonus evidence, you will asked to rate your confidence in the decision you made. \n \n \n',...
        'The bonus evidence can help you know whether you were right or wrong. \n \n \n',...
        'To report your confidence, click on the confidence scale. \n \n \n',... 
        'You will now do 6 practice trials to get used to this. \n \n \n',...
        'If you are ready for the practice trials, press any key to begin.'],...
        'center', 'center', [255 255 255]);
    Screen('Flip', curWindow,0);
    WaitSecs(1);
    KbWait(-1);
    
    apRect = floor(createTRect(params.apXYD, screenInfo));
    % making precoherence*direction*postcoherence conditions
    DotsConditions(1,:) = repmat(params.Mguess, 1, 2);
    DotsConditions(2,:) = [1 1 1 2 2 2];
    DotsConditions(3,:) = params.Mguess([3 1 1 2 3 2]);
    % shuffle them for pseudorandom pattern
    randConds = DotsConditions(:, randperm(length(DotsConditions)));
    
    for n = 1:6
        DotsMotion = randConds(2,n).*180;
        DotsMotion_radians = (DotsMotion/360).*(2.*pi);
        
        Screen('DrawDots', curWindow, [0; 0], (0.2*screenInfo.ppd), [255 255 255], screenInfo.center, 1);
        Screen('FrameOval', curWindow, [255 255 255], apRect);
        Screen('Flip', curWindow,0);
        WaitSecs(0.5);
        showLocalizerDots_random(1, randConds(1,n), params.dur(1), DotsMotion_radians, params, screenInfo);
        [end_time, b_response, b_response_time] = collectButtonResponse(params, inf);
        WaitSecs(params.wait(1));
        % show post decision evidence
        showLocalizerDots_random(2, randConds(3,n), params.dur(1), DotsMotion_radians, params, screenInfo);
        WaitSecs(params.wait(2));
        [end_time, m_response, m_response_time] = showConfidenceScale(params, screenInfo);

    end
    
    % give chance to ask questions
    DrawFormattedText(curWindow, ['If you have any questions before beginning this part of the experiment, please ask the experimenter now. \n \n \n',...
        'If you are ready to start the experiment, press any key to begin.'],...
        'center', 'center', [255 255 255]);
    Screen('Flip', curWindow,0);
    WaitSecs(1);
    KbWait(-1);
    end
    
elseif part == 2
    if task == 1
        DrawFormattedText(curWindow, ['In the first part of the experiment you will be doing 120 trials divided over 3 blocks. \n \n \n',...
            'The task is the same as the first task on the first day you came into the lab. \n \n \n',...
            'We will ask you to guess the direction of the dots without any confidence rating. \n \n \n',...
            'Press 1 for left, and 2 for right. If you are finished, please wait until the scanner is also finished. \n \n \n',...
            'Now please place your fingers on the 1 and 2 buttons of your button box and we will begin the task!'],...
            'center', 'center', [255 255 255]);
        Screen('Flip', curWindow,0);
        WaitSecs(1);
        while 1
            [s, key] = KbWait(-1);
            if strcmp(KbName(key),'Return'), break, end
        end
        
    elseif task == 2
        % bonus evidence instructions
        DrawFormattedText(curWindow, ['You will now begin the second task, in which you will perform 360 trials divided over 4 blocks. \n \n',...
            'Every trial consists of dots moving to the left or right.  \n \n',...
            'Press 1 for left and 2 for right. Make sure to not think about it for too long, because you only \n \n',...
            'have 1.5 seconds to decide. Then, the fixation dot will turn red and you will see bonus \n \n',...
            'evidence in the same direction. After this bonus evidence you will be asked to rate your confidence \n \n',...
            'on a sliding scale, where pressing 1 moves the cursor to the left and 2 to the right. \n \n',...
            'The "3" key confirms your choice. \n',...
            'You only have 3 seconds to do this so make sure you confirm your response by pressing "3" in time. \n \n',...
            'Now please place your fingers on the 1, 2 and 3 button of your button box. \n \n',...
            'We will start the task when both you and the scanner are ready.'],...
            'center', 'center', [255 255 255]);
        Screen('Flip', curWindow,0);
        WaitSecs(0.5);
        while 1
            [s, key] = KbWait(-1);
            if strcmp(KbName(key),'Return'), break, end
        end
    end
    
end


end

